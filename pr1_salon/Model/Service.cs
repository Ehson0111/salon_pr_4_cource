//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace pr1_salon.Model
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Windows.Media.Imaging;
    public partial class Service
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Service()
        {
            this.ClientService = new HashSet<ClientService>();
            this.ServicePhoto = new HashSet<ServicePhoto>();
        }

        public int ID { get; set; }
        public string Title { get; set; }
        public string MainImagePath { get; set; }
        public int DurationInSeconds { get; set; }
        public decimal Cost { get; set; }
        public Nullable<double> Discount { get; set; }
        public string Description { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClientService> ClientService { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ServicePhoto> ServicePhoto { get; set; }


        //public string FullImagePath
        //{
        //    get
        //    {
        //        if (string.IsNullOrEmpty(MainImagePath))
        //            return null;

        //        string dbPath = MainImagePath.Replace("/", "\\").Trim();
        //        return Path.Combine(@"C:\Users\ekhso\source\repos\pr1_salon\pr1_salon\Image\", dbPath.TrimStart('\\'));
        //        //return Path.Combine(@"C:\Users\elozo\OneDrive\Рабочий стол\4 курс\МДК.02.02 Инструментальные средства разработки программного обеспечения\Салон красоты - услуги\Beauty_Salon\Images\", dbPath.TrimStart('\\'));


        //    }

        //}
        public string FullImagePath
        {
            get
            {
                if (string.IsNullOrEmpty(MainImagePath))
                    return null;

                string dbPath = MainImagePath.Replace("/", "\\").Trim();

                // Замените на относительный путь
                //return Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Image", dbPath.TrimStart('\\'));

                // Или используйте относительный путь от корня проекта
                //return Path.Combine(Directory.GetCurrentDirectory(), "Image", dbPath.TrimStart('\\'));


                return Path.Combine(@"C:\Users\ekhso\source\repos\pr1_salon\pr1_salon\Image\", dbPath.TrimStart('\\'));

            }
        }
        public string ImageSource
        {
            get
            {
                if (!string.IsNullOrEmpty(FullImagePath) && File.Exists(FullImagePath))
                {
                    return FullImagePath;
                }
                return FullImagePath;

            }

        } 
        //public BitmapImage ImageSource
        //{
        //    get
        //    {
        //        if (!string.IsNullOrEmpty(FullImagePath) && File.Exists(FullImagePath))
        //        {
        //            return new BitmapImage(new Uri(FullImagePath, UriKind.Absolute));
        //        }
        //        return null;
        //    }
        //}

        //public string ImageSource
        //{
        //    get
        //    {
        //        if (!string.IsNullOrEmpty(FullImagePath) && File.Exists(FullImagePath))
        //        {
        //            //return new BitmapImage(new Uri(FullImagePath, UriKind.Absolute));
        //            return "dsf";
        //            //return FullImagePath;

        //        }
        //        return null;
        //    }
        //}


        //public string Background
        //{

        //    get
        //    {
        //        if (this.ProductDiscountAmount > 15)
        //            return "#7fff00";
        //        return "#fff";
        //    }
        //}


        //public string ImageSource
        //{

        //    get
        //    {

        //        var path = "pack://application:,,,/Resources/" + this.MainImagePath;
        //        return path;

        //    }

        //}


        public decimal DiscountedCost { get; set; }
        public string DiscountDescription { get; set; }

    }
}
